2024-04-30T10:28:12.618+0530 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-04-30T10:28:12.647+0530 [main] INFO  c.e.c.CloudConfigServerApplication - Starting CloudConfigServerApplication using Java 20.0.1 with PID 50424 (/home/hemanth/Desktop/iiitb/SPE/SPEMAJORPROJECT/cloud-config-server/target/classes started by hemanth in /home/hemanth/Desktop/iiitb/SPE/SPEMAJORPROJECT/cloud-config-server)
2024-04-30T10:28:12.648+0530 [main] DEBUG c.e.c.CloudConfigServerApplication - Running with Spring Boot v3.2.4, Spring v6.1.5
2024-04-30T10:28:12.648+0530 [main] INFO  c.e.c.CloudConfigServerApplication - No active profile set, falling back to 1 default profile: "default"
2024-04-30T10:28:13.217+0530 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d5113200-e7d7-3f08-9f5b-021c93f756a2
2024-04-30T10:28:13.254+0530 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-30T10:28:13.255+0530 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-30T10:28:13.359+0530 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9296 (http)
2024-04-30T10:28:13.365+0530 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9296"]
2024-04-30T10:28:13.366+0530 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-04-30T10:28:13.366+0530 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-30T10:28:13.402+0530 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-04-30T10:28:13.403+0530 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 730 ms
2024-04-30T10:28:13.799+0530 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-04-30T10:28:15.705+0530 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-30T10:28:15.734+0530 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-04-30T10:28:15.751+0530 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-04-30T10:28:15.751+0530 [main] INFO  c.netflix.discovery.DiscoveryClient - Client configured to neither register nor query for data.
2024-04-30T10:28:15.756+0530 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1714453095755 with initial instances count: 0
2024-04-30T10:28:15.759+0530 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application CLOUD-CONFIG-SERVER with eureka with status UP
2024-04-30T10:28:15.760+0530 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9296"]
2024-04-30T10:28:15.767+0530 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9296 (http) with context path ''
2024-04-30T10:28:15.768+0530 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 9296
2024-04-30T10:28:15.846+0530 [main] INFO  c.e.c.CloudConfigServerApplication - Started CloudConfigServerApplication in 3.493 seconds (process running for 3.961)
2024-04-30T10:28:36.057+0530 [http-nio-9296-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-30T10:28:36.057+0530 [http-nio-9296-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-04-30T10:28:36.058+0530 [http-nio-9296-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-04-30T10:28:37.248+0530 [http-nio-9296-exec-1] INFO  o.s.c.c.s.e.NativeEnvironmentRepository - Adding property source: Config resource 'file [/tmp/config-repo-15129694756335636741/application.yml]' via location 'file:/tmp/config-repo-15129694756335636741/'
2024-04-30T10:35:15.570+0530 [http-nio-9296-exec-3] INFO  o.s.c.c.s.e.NativeEnvironmentRepository - Adding property source: Config resource 'file [/tmp/config-repo-15129694756335636741/application.yml]' via location 'file:/tmp/config-repo-15129694756335636741/'
2024-04-30T10:36:29.195+0530 [http-nio-9296-exec-5] INFO  o.s.c.c.s.e.NativeEnvironmentRepository - Adding property source: Config resource 'file [/tmp/config-repo-15129694756335636741/application.yml]' via location 'file:/tmp/config-repo-15129694756335636741/'
2024-04-30T10:37:47.713+0530 [http-nio-9296-exec-7] INFO  o.s.c.c.s.e.NativeEnvironmentRepository - Adding property source: Config resource 'file [/tmp/config-repo-15129694756335636741/application.yml]' via location 'file:/tmp/config-repo-15129694756335636741/'
2024-04-30T10:40:40.451+0530 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.cloudconfigserver.CloudConfigServerApplicationTests]: CloudConfigServerApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-04-30T10:40:40.526+0530 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.cloudconfigserver.CloudConfigServerApplication for test class com.example.cloudconfigserver.CloudConfigServerApplicationTests
2024-04-30T10:40:40.829+0530 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-04-30T10:40:40.848+0530 [main] INFO  c.e.c.CloudConfigServerApplicationTests - Starting CloudConfigServerApplicationTests using Java 17.0.10 with PID 61204 (started by hemanth in /home/hemanth/Desktop/iiitb/SPE/SPEMAJORPROJECT/cloud-config-server)
2024-04-30T10:40:40.849+0530 [main] DEBUG c.e.c.CloudConfigServerApplicationTests - Running with Spring Boot v3.2.4, Spring v6.1.5
2024-04-30T10:40:40.849+0530 [main] INFO  c.e.c.CloudConfigServerApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-04-30T10:40:41.443+0530 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=6607cca9-8b05-362d-8c1d-a8411ad91df5
2024-04-30T10:40:41.509+0530 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-30T10:40:41.510+0530 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-30T10:40:42.136+0530 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-04-30T10:40:44.768+0530 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-30T10:40:44.784+0530 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2024-04-30T10:40:44.800+0530 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2024-04-30T10:40:44.801+0530 [main] INFO  c.netflix.discovery.DiscoveryClient - Client configured to neither register nor query for data.
2024-04-30T10:40:44.805+0530 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1714453844805 with initial instances count: 0
2024-04-30T10:40:44.809+0530 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application CLOUD-CONFIG-SERVER with eureka with status UP
2024-04-30T10:40:44.819+0530 [main] INFO  c.e.c.CloudConfigServerApplicationTests - Started CloudConfigServerApplicationTests in 4.198 seconds (process running for 4.944)
2024-04-30T10:40:45.321+0530 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application CLOUD-CONFIG-SERVER with eureka with status DOWN
2024-04-30T10:40:45.324+0530 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2024-04-30T10:40:45.362+0530 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
